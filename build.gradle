plugins {
	id "dev.architectury.loom" version "1.1-SNAPSHOT"
	id "io.github.juuxel.loom-quiltflower" version "1.10.+"
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

loom {
	forge {
		mixinConfigs = [
		    "libzoomer.mixins.json"
		]
	}
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

repositories {
	maven { url "https://maven.quiltmc.org/repository/release" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${quilt_mappings}:intermediary-v2"
	forge "net.minecraftforge:forge:${project.forge_version}"

	afterEvaluate {
		testmodImplementation sourceSets.main.output
	}
}

loom {
	runs {
		testmodClient {
			client()
			configName = 'Testmod Client'
			source(project.sourceSets.testmod)
		}
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()

	withJavadocJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
